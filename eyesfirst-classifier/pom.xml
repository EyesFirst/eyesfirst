<?xml version="1.0"?>

<!--
Copyright 2012 The MITRE Corporation

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.eyesfirst</groupId>
		<artifactId>eyesfirst</artifactId>
		<version>0.0.4-SNAPSHOT</version>
		<relativePath>..</relativePath>
	</parent>

	<artifactId>eyesfirst-classifier-matlab</artifactId>
	<packaging>jar</packaging>

	<name>EyesFirst Classifier MATLAB</name>
	<description>The MATLAB code for the EyesFirst classifier.</description>

	<url>http://maven.apache.org</url>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>compile</id>
						<phase>compile</phase>
						<configuration>
							<target>
								<ant antfile="${basedir}/build.xml"/>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>test</id>
						<phase>process-test-classes</phase>
						<configuration>
							<!-- This is really stupid, but - we basically write
							a .properties file to export the value from the
							inner ANT script to ourself. As far as I can tell,
							this is the only way to do this. -->
							<target>
								<property name="matlab.properties" value="${project.build.directory}/matlab.properties"/>
								<ant antfile="${basedir}/find-matlab.xml" target="write-properties"/>
								<property file="${matlab.properties}"/>
							</target>
							<!-- We need to export the matlab property -->
							<exportAntProperties>true</exportAntProperties>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<classifier>${eyesfirst.currentPlatform}</classifier>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<!-- Depending on platform, we need to set up the surefire plugin differently -->
	<profiles>
		<profile>
			<id>osx</id>
			<activation>
				<os>
					<name>Mac OS X</name>
					<arch>x86_64</arch>
				</os>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<environmentVariables>
								<DYLD_LIBRARY_PATH>${matlab}/runtime/maci64:${matlab}/bin/maci64:${matlab}/sys/os/maci64</DYLD_LIBRARY_PATH>
								<XAPPLRESDIR>${matlab}/X11/app-defaults</XAPPLRESDIR>
							</environmentVariables>
						</configuration>
					</plugin>
					<!-- Under Mac OS X, we also need to enforce that the JDK
					is version 6 and not 7, due to MATLAB dependencies. -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-enforcer-plugin</artifactId>
						<version>1.3</version>
						<executions>
							<execution>
								<id>enforce-versions</id>
								<goals>
									<goal>enforce</goal>
								</goals>
								<configuration>
									<rules>
										<requireJavaVersion>
											<version>[1.6,1.7)</version>
										</requireJavaVersion>
									</rules>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>linux</id>
			<activation>
				<os>
					<family>linux</family>
					<arch>amd64</arch>
				</os>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<environmentVariables>
								<LD_LIBRARY_PATH>${matlab}/runtime/glnxa64:${matlab}/bin/glnxa64:${matlab}/sys/os/glnxa64:${matlab}/sys/java/jre/glnxa64/jre/lib/amd64/native_threads:${matlab}/sys/java/jre/glnxa64/jre/lib/amd64/server:${matlab}/sys/java/jre/glnxa64/jre/lib/amd64</LD_LIBRARY_PATH>
								<XAPPLRESDIR>${matlab}/X11/app-defaults</XAPPLRESDIR>
							</environmentVariables>
							<jvm>/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/bin/java</jvm>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<properties>
		<project.build.sourceEncoding>utf-8</project.build.sourceEncoding>
	</properties>
	<dependencies>
		<!--
		This is a "fake" dependency to the MCR libraries. Use

			ant -f install-mcr.xml

		to automatically create and install the MCR library as a Maven
		artifact.
		-->
		<dependency>
			<groupId>com.mathworks</groupId>
			<artifactId>javabuilder</artifactId>
			<version>[7.16,)</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>
